---
- name: ocp4-deploy | task02-ignition | Backup ignition config directory
  copy:
    src: "{{ artifact_directory }}/data/"
    dest: "{{ artifact_directory }}/bak/data-ignition/"

- name: ocp4-deploy | task02-ignition | Generate ignition config files
  shell: "openshift-install create ignition-configs --dir={{ artifact_directory }}/data"

- name: ocp4-deploy | task02-ignition | Move auth directory out of future nginx web root path
  shell: "mv {{ artifact_directory }}/data/auth {{ artifact_directory }}/bak/auth"
  ignore_errors: True

- name: ocp4-deploy | task02-ignition | Copy kubeconfig
  copy:
    src: "{{ artifact_directory }}/bak/auth/kubeconfig"
    dest: ~/.kube/config

- name: ocp4-deploy | task02-ignition | Register AWS access key ID
  shell: "cat ${dirArtifacts}/.aws/govcloud.credentials | grep aws_access_key_id | awk '{print $3}'"
  register: aws_access_key

- name: ocp4-deploy | task02-ignition | Register AWS secret access key
  shell: "cat ${dirArtifacts}/.aws/govcloud.credentials | grep aws_secret_access_key | awk '{print $3}'"
  register: aws_secret_key

- set_fact:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key.stdout }}"
    TF_VAR_aws_access_key_id: "{{ aws_access_key.stdout }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_key.stdout }}"
    TF_VAR_aws_secret_access_key: "{{ aws_secret_key.stdout }}"
  no_log: true

